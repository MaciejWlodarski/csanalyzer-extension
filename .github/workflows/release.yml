name: Build and Release Chrome Extension

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Derive version from tag
        id: vars
        shell: bash
        run: |
          TAG_NAME="${GITHUB_REF_NAME}"     # np. v0.2.0-beta.1
          VERSION="${TAG_NAME#v}"           # 0.2.0-beta.1
          echo "tag_name=$TAG_NAME" >> "$GITHUB_OUTPUT"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          if [[ "$VERSION" == *-* ]]; then
            echo "is_prerelease=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_prerelease=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Validate tag matches package.json version
        shell: bash
        env:
          VERSION: ${{ steps.vars.outputs.version }}
        run: |
          PKG_VERSION=$(node -p "require('./package.json').version")
          if [ "$PKG_VERSION" != "$VERSION" ]; then
            echo "Tag version ($VERSION) != package.json version ($PKG_VERSION)"
            exit 1
          fi
          echo "Version OK: $PKG_VERSION"

      - name: Install dependencies
        run: npm ci

      - name: Build extension
        run: npm run build

      - name: Zip build folder
        run: |
          cd dist
          zip -r ../csanalyzer-extension.zip .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag_name }}
          name: ${{ steps.vars.outputs.tag_name }}
          files: csanalyzer-extension.zip
          prerelease: ${{ steps.vars.outputs.is_prerelease == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
